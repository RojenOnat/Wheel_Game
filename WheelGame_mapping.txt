# compiler: R8
# compiler_version: 4.0.52
# min_api: 23
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.1"}
# pg_map_id: 53de830
# pg_map_hash: SHA-256 53de830e21505c79ecc017569009bf6934fb83f7b35807dc0ffc89e8b64abdff
bitter.jnibridge.a$$ExternalSyntheticApiModelOutline0 -> bitter.jnibridge.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.invoke.MethodHandles$Lookup bitter.jnibridge.a$$InternalSyntheticApiModelOutline$1$42752ee8f7320f7f78c1c4403441487ecd104dd939a1f270d5ebeb391275367a$0.m(java.lang.invoke.MethodHandles$Lookup,java.lang.Class) -> a
      # {"id":"com.android.tools.r8.synthesized"}
bitter.jnibridge.a$$ExternalSyntheticApiModelOutline1 -> bitter.jnibridge.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.invoke.MethodHandle bitter.jnibridge.a$$InternalSyntheticApiModelOutline$1$42752ee8f7320f7f78c1c4403441487ecd104dd939a1f270d5ebeb391275367a$1.m(java.lang.invoke.MethodHandles$Lookup,java.lang.reflect.Method,java.lang.Class) -> a
      # {"id":"com.android.tools.r8.synthesized"}
bitter.jnibridge.a$$ExternalSyntheticApiModelOutline2 -> bitter.jnibridge.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.invoke.MethodHandle bitter.jnibridge.a$$InternalSyntheticApiModelOutline$1$42752ee8f7320f7f78c1c4403441487ecd104dd939a1f270d5ebeb391275367a$2.m(java.lang.invoke.MethodHandle,java.lang.Object) -> a
      # {"id":"com.android.tools.r8.synthesized"}
bitter.jnibridge.a$$ExternalSyntheticApiModelOutline3 -> bitter.jnibridge.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object bitter.jnibridge.a$$InternalSyntheticApiModelOutline$1$42752ee8f7320f7f78c1c4403441487ecd104dd939a1f270d5ebeb391275367a$3.m(java.lang.invoke.MethodHandle,java.lang.Object[]) -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.google.androidgamesdk.SwappyDisplayManager -> com.google.androidgamesdk.SwappyDisplayManager:
    android.app.Activity -$$Nest$fgetmActivity(com.google.androidgamesdk.SwappyDisplayManager) -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.google.androidgamesdk.b -> com.google.androidgamesdk.b:
    void <init>(com.google.androidgamesdk.b-IA) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
com.google.androidgamesdk.b-IA -> a.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
com.google.androidgamesdk.d -> com.google.androidgamesdk.d:
    void <init>(com.google.androidgamesdk.d-IA) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
com.google.androidgamesdk.d-IA -> a.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.C0 -> com.unity3d.player.C0:
    void -$$Nest$fputb(com.unity3d.player.C0,boolean) -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.HFPStatus -> com.unity3d.player.HFPStatus:
    boolean -$$Nest$fgetc(com.unity3d.player.HFPStatus) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    android.media.AudioManager -$$Nest$fgetd(com.unity3d.player.HFPStatus) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputf(com.unity3d.player.HFPStatus,int) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$ma(com.unity3d.player.HFPStatus) -> d
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.L0 -> com.unity3d.player.L0:
    com.unity3d.player.UnityPlayer -$$Nest$fgeta(com.unity3d.player.L0) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.Context -$$Nest$fgetb(com.unity3d.player.L0) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    com.unity3d.player.K0 -$$Nest$fgetc(com.unity3d.player.L0) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.concurrent.Semaphore -$$Nest$fgetd(com.unity3d.player.L0) -> d
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.concurrent.locks.ReentrantLock -$$Nest$fgete(com.unity3d.player.L0) -> e
      # {"id":"com.android.tools.r8.synthesized"}
    com.unity3d.player.D0 -$$Nest$fgetf(com.unity3d.player.L0) -> f
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$fgeti(com.unity3d.player.L0) -> g
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputf(com.unity3d.player.L0,com.unity3d.player.D0) -> h
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputg(com.unity3d.player.L0,int) -> i
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputi(com.unity3d.player.L0,boolean) -> j
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.MultiWindowSupport$$ExternalSyntheticApiModelOutline0 -> com.unity3d.player.a1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean com.unity3d.player.MultiWindowSupport$$InternalSyntheticApiModelOutline$1$9a81a94f341d90d3e5b43c52ebb178f91bb2a5fab6ce82488de68f35b94c27cb$0.m(android.app.Activity) -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.NetworkConnectivity -> com.unity3d.player.NetworkConnectivity:
    void -$$Nest$fputa(com.unity3d.player.NetworkConnectivity,int) -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.NetworkConnectivity$$ExternalSyntheticApiModelOutline0 -> com.unity3d.player.b1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.unity3d.player.NetworkConnectivity$$InternalSyntheticApiModelOutline$1$3f80fb905715db788e1bb6f42377445d6169f0032e0a5183c7af36a316d9bed3$0.m(android.net.ConnectivityManager,android.net.ConnectivityManager$NetworkCallback) -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.PermissionFragment -> com.unity3d.player.PermissionFragment:
    void -$$Nest$mreportAllDenied(com.unity3d.player.PermissionFragment,java.lang.String[]) -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.ReflectionHelper -> com.unity3d.player.ReflectionHelper:
    long -$$Nest$sfgetb() -> a
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$smnativeProxyFinalize(long) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object -$$Nest$smnativeProxyInvoke(long,java.lang.String,java.lang.Object[]) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$smnativeProxyJNIFreeGCHandle(long) -> d
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$smnativeProxyLogJNIInvokeException(long) -> e
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.UnityPlayer -> com.unity3d.player.UnityPlayer:
    void -$$Nest$mnativeSendSurfaceChangedEvent(com.unity3d.player.UnityPlayer) -> A
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeSetInputArea(com.unity3d.player.UnityPlayer,int,int,int,int) -> B
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeSetInputSelection(com.unity3d.player.UnityPlayer,int,int) -> C
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeSetInputString(com.unity3d.player.UnityPlayer,java.lang.String) -> D
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeSetKeyboardIsVisible(com.unity3d.player.UnityPlayer,boolean) -> E
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeSetLaunchURL(com.unity3d.player.UnityPlayer,java.lang.String) -> F
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeSoftInputCanceled(com.unity3d.player.UnityPlayer) -> G
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeSoftInputClosed(com.unity3d.player.UnityPlayer) -> H
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeSoftInputLostFocus(com.unity3d.player.UnityPlayer) -> I
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mqueueDestroy(com.unity3d.player.UnityPlayer) -> J
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$msendSurfaceChangedEvent(com.unity3d.player.UnityPlayer) -> K
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mshutdown(com.unity3d.player.UnityPlayer) -> L
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mupdateGLDisplay(com.unity3d.player.UnityPlayer,int,android.view.Surface) -> M
      # {"id":"com.android.tools.r8.synthesized"}
    android.app.Activity -$$Nest$fgetmActivity(com.unity3d.player.UnityPlayer) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.Context -$$Nest$fgetmContext(com.unity3d.player.UnityPlayer) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    android.view.SurfaceView -$$Nest$fgetmGlView(com.unity3d.player.UnityPlayer) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgetmInitialScreenOrientation(com.unity3d.player.UnityPlayer) -> d
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$fgetmMainDisplayOverride(com.unity3d.player.UnityPlayer) -> e
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgetmNaturalOrientation(com.unity3d.player.UnityPlayer) -> f
      # {"id":"com.android.tools.r8.synthesized"}
    com.unity3d.player.w -$$Nest$fgetm_PersistentUnitySurface(com.unity3d.player.UnityPlayer) -> g
      # {"id":"com.android.tools.r8.synthesized"}
    com.unity3d.player.a.e -$$Nest$fgetm_SplashScreen(com.unity3d.player.UnityPlayer) -> h
      # {"id":"com.android.tools.r8.synthesized"}
    com.unity3d.player.IUnityPlayerLifecycleEvents -$$Nest$fgetm_UnityPlayerLifecycleEvents(com.unity3d.player.UnityPlayer) -> i
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputmQuitting(com.unity3d.player.UnityPlayer,boolean) -> j
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputmVideoPlayerProxy(com.unity3d.player.UnityPlayer,com.unity3d.player.L0) -> k
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputm_SplashScreen(com.unity3d.player.UnityPlayer,com.unity3d.player.a.e) -> l
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mDisableStaticSplashScreen(com.unity3d.player.UnityPlayer) -> m
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mfinish(com.unity3d.player.UnityPlayer) -> n
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$mgetAutoReportFullyDrawnEnabled(com.unity3d.player.UnityPlayer) -> o
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$mgetSplashEnabled(com.unity3d.player.UnityPlayer) -> p
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeFocusChanged(com.unity3d.player.UnityPlayer,boolean) -> q
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$mnativeIsAutorotationOn(com.unity3d.player.UnityPlayer) -> r
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeLowMemory(com.unity3d.player.UnityPlayer) -> s
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeMuteMasterAudio(com.unity3d.player.UnityPlayer,boolean) -> t
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeOrientationChanged(com.unity3d.player.UnityPlayer,int,int) -> u
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$mnativePause(com.unity3d.player.UnityPlayer) -> v
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeRecreateGfxState(com.unity3d.player.UnityPlayer,int,android.view.Surface) -> w
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$mnativeRender(com.unity3d.player.UnityPlayer) -> x
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeReportKeyboardConfigChanged(com.unity3d.player.UnityPlayer) -> y
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeResume(com.unity3d.player.UnityPlayer) -> z
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.a.a -> b.a:
com.unity3d.player.a.b -> b.b:
com.unity3d.player.a.c -> b.c:
com.unity3d.player.a.d -> b.d:
com.unity3d.player.a.e -> b.e:
com.unity3d.player.h -> com.unity3d.player.h:
    com.google.android.play.core.assetpacks.AssetPackManager -$$Nest$fgeta(com.unity3d.player.h) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.HashSet -$$Nest$fgetb(com.unity3d.player.h) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object -$$Nest$fgetc(com.unity3d.player.h) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputc(com.unity3d.player.h,java.lang.Object) -> d
      # {"id":"com.android.tools.r8.synthesized"}
    com.unity3d.player.h -$$Nest$sfgetd() -> e
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.q -> com.unity3d.player.q:
    com.unity3d.player.a.b -$$Nest$fgeta(com.unity3d.player.q) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    android.hardware.camera2.CameraDevice -$$Nest$fgetb(com.unity3d.player.q) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    android.util.Range -$$Nest$fgetn(com.unity3d.player.q) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    android.media.ImageReader -$$Nest$fgeto(com.unity3d.player.q) -> d
      # {"id":"com.android.tools.r8.synthesized"}
    android.media.Image -$$Nest$fgetp(com.unity3d.player.q) -> e
      # {"id":"com.android.tools.r8.synthesized"}
    android.hardware.camera2.CaptureRequest$Builder -$$Nest$fgetq(com.unity3d.player.q) -> f
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object -$$Nest$fgets(com.unity3d.player.q) -> g
      # {"id":"com.android.tools.r8.synthesized"}
    android.view.Surface -$$Nest$fgetv(com.unity3d.player.q) -> h
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputb(com.unity3d.player.q,android.hardware.camera2.CameraDevice) -> i
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputp(com.unity3d.player.q,android.media.Image) -> j
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputq(com.unity3d.player.q,android.hardware.camera2.CaptureRequest$Builder) -> k
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputr(com.unity3d.player.q,android.hardware.camera2.CameraCaptureSession) -> l
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$ma(com.unity3d.player.q,android.hardware.camera2.CameraDevice) -> m
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$ma(com.unity3d.player.q,java.lang.Object) -> n
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mg(com.unity3d.player.q) -> o
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.concurrent.Semaphore -$$Nest$sfgetD() -> p
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.v$$ExternalSyntheticApiModelOutline0 -> com.unity3d.player.c1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.unity3d.player.v$$InternalSyntheticApiModelOutline$1$aff73f2b96f0c74347c7e09ef4df8e0b705999702c63be01ae8a9fe6c6469564$0.m(android.view.SurfaceView,android.graphics.Bitmap,android.view.PixelCopy$OnPixelCopyFinishedListener,android.os.Handler) -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.v0 -> com.unity3d.player.v0:
    void <init>(com.unity3d.player.UnityPlayer,com.unity3d.player.v0-IA) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.v0-IA -> com.unity3d.player.d1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.y -> com.unity3d.player.y:
    int -$$Nest$fgetd(com.unity3d.player.y) -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.y0 -> com.unity3d.player.y0:
    void <init>(com.unity3d.player.UnityPlayer,com.unity3d.player.y0-IA) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$ma(com.unity3d.player.y0,com.unity3d.player.w0) -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.y0-IA -> com.unity3d.player.e1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.z -> com.unity3d.player.z:
    long -$$Nest$fgeta(com.unity3d.player.z) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$fgetb(com.unity3d.player.z) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputa(com.unity3d.player.z,long) -> c
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.z0 -> com.unity3d.player.z0:
    void <init>(com.unity3d.player.UnityPlayer,com.unity3d.player.z0-IA) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.z0-IA -> com.unity3d.player.f1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
